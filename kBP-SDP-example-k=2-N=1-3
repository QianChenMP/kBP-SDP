clc;
clear;
cvx_clear

% QETLAB package is import, for using PermutationOperator

d;
alpha;

X=eye(d*d)+alpha*MaxEntangled(d,0,0)*MaxEntangled(d,0,0)';

% Level 1
cvx_begin sdp
cvx_solver Mosek
variable rho(d*d,d*d) hermitian
minimize( trace(a*X) )
rho >= 0;
trace(rho)==1;
cvx_end

% Level 2 diagram=(2,1)
cvx_begin sdp
cvx_solver Mosek
variable rho(2*d*d*d,2*d*d*d) hermitian
minimize( trace(rho*kron([1 0;0 0],kron(X,eye(d)))) )
kron([1/2 sqrt(3)/2;sqrt(3)/2 -1/2],PermutationOperator(d,[1,3,2]))*rho == rho;
rho >= 0;
trace(rho)==1;
cvx_end

% Level 3 diagram=(2,2)
cvx_begin sdp
cvx_solver Mosek
variable rho(2*d*d*d*d,2*d*d*d*d) hermitian
minimize( trace(rho*kron([1 0;0 0],kron(X,eye(d*d)))) )
kron([1/2 sqrt(3)/2;sqrt(3)/2 -1/2],PermutationOperator(d,[1,3,2,4]))*rho == rho;
kron([-1 0;0 1],PermutationOperator(d,[1,2,4,3]))*rho == rho;
rho >= 0;
trace(rho) == 1;
cvx_end

% Level 3 diagram=(3,1)
cvx_begin sdp
cvx_solver Mosek
variable rho(3*d*d*d*d,3*d*d*d*d) hermitian
minimize( trace(rho*kron([1 0 0;0 0 0; 0 0 0],kron(X,eye(d*d)))) )
kron([1/2 sqrt(3)/2 0; sqrt(3)/2 -1/2 0; 0 0 1],eye(d*d*d*d))*kron(eye(3),PermutationOperator(d,[1,3,2,4]))*rho == rho;
kron([1 0 0; 0 1/3 2*sqrt(2)/3; 0 2*sqrt(2)/3 -1/3],eye(d*d*d*d))*kron(eye(3),PermutationOperator(d,[1,2,4,3]))*rho == rho;
rho >= 0;
trace(rho) == 1;
cvx_end
